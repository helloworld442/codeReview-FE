{
  "codeReview": [
    {
      "category": "Javascript",
      "code": "//s의 길이만큼 반복하면서 다음 과정을 수행한다.\n//index의 길이만큼 반복하면서 다음 과정을 수행한다.\n//만약 skip에 해당 단어가 있다면 index를 올리지 않는다.\n//만약 skip에 해당 단어가 없다면 index를 올린다.\n//index만큼 뒤에 있는 알파벳을 answer에 더한다.\n//answer를 리턴한다.\n\nfunction solution(s, skip, index) {\n    var answer = '';\n    let alpha = \"abcdefghijklmnopqrstuvwxyz\";\n    for(let i = 0; i < s.length; i++) {\n        let j = 0;\n        let k = alpha.indexOf(s[i])\n        while (j < index) {\n            if(!skip.includes(alpha[(k+1) % 26])) {\n                j++;\n            }\n            k += 1;\n        }\n        k = k % 26\n        answer += alpha[k]\n    }\n    \n    return answer;\n}",
      "title": "[Example 1] 자바스크립트 알고리즘 문의asdfasdfasdf",
      "problem": "[Example 1] 자바스크립트 알고리즘 문의\n[Example 1] 자바스크립트 알고리즘 문의\n[Example 1] 자바스크립트 알고리즘 문의",
      "question": "[Example 1] 자바스크립트 알고리즘 문의\n[Example 1] 자바스크립트 알고리즘 문의\n[Example 1] 자바스크립트 알고리즘 문의",
      "id": 11
    },
    {
      "category": "Javascript",
      "code": "function solution(numbers, hand) {\n    var answer = '';\n    let numbersIndex = {\n        1 : [0,0],\n        2 : [0,1],\n        3 : [0,2],\n        4 : [1,0],\n        5 : [1,1],\n        6 : [1,2],\n        7 : [2,0],\n        8 : [2,1],\n        9 : [2,2],\n        0 : [3,1],\n        \"*\" : [3,0],\n        \"#\" : [3,2],\n    };\n    let left = [1,4,7]\n    let right = [3,6,9]\n    let leftHand = \"*\";\n    let rightHand = \"#\";\n    \n    for(let i = 0; i < numbers.length; i++) {\n        if(left.includes(numbers[i])) {\n            answer += \"L\"\n            leftHand = numbers[i]\n        }\n        \n        else if (right.includes(numbers[i])) {\n            answer += \"R\"\n            rightHand = numbers[i]\n        }\n        \n        else {\n            let r = numbersIndex[rightHand]\n            let l = numbersIndex[leftHand]\n            let c = numbersIndex[numbers[i]]\n            \n            let rDistance = Math.abs(c[0] - r[0]) + Math.abs(c[1] - r[1])\n            let lDistance = Math.abs(c[0] - l[0]) + Math.abs(c[1] - l[1])\n            \n            if(rDistance > lDistance) {\n                answer += \"L\";\n                leftHand = numbers[i]\n            }\n                \n            else if(rDistance < lDistance) {\n                answer += \"R\";\n                rightHand = numbers[i]\n            }\n            \n            else {\n                if(hand === \"right\") {\n                    answer += \"R\";\n                    rightHand = numbers[i]\n                }\n                \n                else {\n                    answer += \"L\";\n                    leftHand = numbers[i]\n                }\n                \n            }\n            \n        }\n    }\n    \n    \n    return answer;\n}",
      "title": "[Example 2] 자바스크립트 알고리즘 어렵네요",
      "problem": "[Example 2] 자바스크립트 알고리즘 어렵네요\n[Example 2] 자바스크립트 알고리즘 어렵네요 \n[Example 2] 자바스크립트 알고리즘 어렵네요\n[Example 2] 자바스크립트 알고리즘 어렵네요",
      "question": "[Example 2] 자바스크립트 알고리즘 어렵네요 \n[Example 2] 자바스크립트 알고리즘 어렵네요 \n[Example 2] 자바스크립트 알고리즘 어렵네요 \n[Example 2] 자바스크립트 알고리즘 어렵네요 ",
      "id": 12
    },
    {
      "category": "Javascript",
      "code": "import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./utils/_index.scss\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",
      "title": "[Example 3] 리엑트 코드 질문입니당",
      "problem": "[Example 3] 리엑트 코드 질문입니당\n[Example 3] 리엑트 코드 질문입니당\n[Example 3] 리엑트 코드 질문입니당\n",
      "question": "[Example 3] 리엑트 코드 질문입니당\n[Example 3] 리엑트 코드 질문입니당\n[Example 3] 리엑트 코드 질문입니당\n",
      "id": 13
    }
  ]
}